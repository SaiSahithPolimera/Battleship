const GameBoard = require("./gameBoard");

test("If no parameters by default gameBoard returns an empty board", () => {
  expect(GameBoard()).toEqual([
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
  ]);
});

test("First ship should be placed at specified position", () => {
  expect(GameBoard(3, 3, 1, 0)).toBe([
    ["", "", "T", "", "", "", "", "", "", ""],
    ["", "", "T", "", "", "", "", "", "", ""],
    ["", "", "T", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
  ]);
});

test("Second ship should be placed at specified position", () => {
  expect(GameBoard(6, 6, 2, 1)).toBe([
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "L", "L", "L", "L", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
  ]);
});

test("Second ship should be positioned horizontally", () => {
  expect(GameBoard(6, 6, 2, 0)).toBe([
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "L", "", "", "", ""],
    ["", "", "", "", "", "L", "", "", "", ""],
    ["", "", "", "", "", "L", "", "", "", ""],
    ["", "", "", "", "", "L", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
  ]);
});

test("The last ship should be positioned at specified position", () => {
  expect(GameBoard(3, 3, 4, 0)).toBe([
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "", "", "", "", "", "", "", ""],
    ["", "", "W", "", "", "", "", "", "", ""],
    ["", "", "W", "", "", "", "", "", "", ""],
    ["", "", "W", "", "", "", "", "", "", ""],
    ["", "", "W", "", "", "", "", "", "", ""],
    ["", "", "W", "", "", "", "", "", "", ""],
    ["", "", "W", "", "", "", "", "", "", ""],
    ["", "", "W", "", "", "", "", "", "", ""],
    ["", "", "W", "", "", "", "", "", "", ""],
  ]);
});
